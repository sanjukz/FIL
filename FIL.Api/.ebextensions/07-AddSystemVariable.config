files:
  "C:\\Scripts\\AddSystemVariable.ps1":
    content: |
      Import-Module AWSPowerShell
      Start-transcript -Path C:\\AddSystemVariable-Transcript.txt -Force
      $NEW_RELIC_LICENSE_KEY = (Get-SSMParameterValue -Name "/newrelic/NEW_RELIC_LICENSE_KEY").parameters[0].Value
      $CORECLR_ENABLE_PROFILING = (Get-SSMParameterValue -Name "/newrelic/CORECLR_ENABLE_PROFILING").parameters[0].Value
      $CORECLR_NEWRELIC_HOME = (Get-SSMParameterValue -Name "/newrelic/CORECLR_NEWRELIC_HOME").Parameters[0].Value
      $CORECLR_PROFILER = (Get-SSMParameterValue -Name "/newrelic/CORECLR_PROFILER").Parameters[0].Value
      $CORECLR_PROFILER_PATH = (Get-SSMParameterValue -Name "/newrelic/CORECLR_PROFILER_PATH").Parameters[0].Value
      function Add-EnvPath {
        param(
        [Parameter(Mandatory=$true)]
        [string] $EnvVariable,
        [Parameter(Mandatory=$true)]
        [string] $EnvValue,
        [ValidateSet('Machine', 'User', 'Session')]
        [string] $Container = 'Session'
        )
        if ($Container -ne 'Session') {
          $containerMapping = @{
            Machine = [EnvironmentVariableTarget]::Machine
            User = [EnvironmentVariableTarget]::User
            }
          $containerType = $containerMapping[$Container]
          $persistedPath = [Environment]::GetEnvironmentVariable($EnvVariable, $containerType)
          if ($persistedPath -ne $EnvValue) {
            [Environment]::SetEnvironmentVariable($EnvVariable, $EnvValue, $containerType)
            }
          }
        }
      Add-EnvPath -EnvVariable "NEW_RELIC_APP_NAME" -EnvValue "$NEW_RELIC_APP_NAME" -Container Machine
      Add-EnvPath -EnvVariable "NEW_RELIC_LICENSE_KEY" -EnvValue "$NEW_RELIC_LICENSE_KEY" -Container Machine
      Add-EnvPath -EnvVariable "CORECLR_ENABLE_PROFILING" -EnvValue "$CORECLR_ENABLE_PROFILING" -Container Machine
      Add-EnvPath -EnvVariable "CORECLR_NEWRELIC_HOME" -EnvValue "$CORECLR_NEWRELIC_HOME" -Container Machine
      Add-EnvPath -EnvVariable "CORECLR_PROFILER" -EnvValue "$CORECLR_PROFILER" -Container Machine
      Add-EnvPath -EnvVariable "CORECLR_PROFILER_PATH" -EnvValue "$CORECLR_PROFILER_PATH" -Container Machine
      Add-EnvPath -EnvVariable "GOOGLE_APPLICATION_CREDENTIALS" -EnvValue "C:\inetpub\AspNetCoreWebApps\Kz.Api\Integrations\Credentials\TestApplication-a335560c3e26.json" -Container Machine
      invoke-command -scriptblock {iisreset}
      Stop-transcript

container_commands:
  07-ADDSystemVariable.config:
    command: powershell.exe -ExecutionPolicy Bypass -File C:\\Scripts\\AddSystemVariable.ps1
    ignoreErrors: true
    waitAfterCompletion: 10